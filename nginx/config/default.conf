limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    # Preserve client information in variables
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header User-Agent $http_user_agent;
    proxy_set_header Referer $http_referer;
    proxy_set_header Authorization $http_authorization;
    proxy_set_header Cookie $http_cookie;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }
    location /docs {
        root   /usr/share/nginx/html;
        index  index.html;

        try_files $uri $uri/ /index.html?$args;
    } 
    location /documentation {
        root   /usr/share/nginx/html;
        index  index.html;

        try_files $uri $uri/ /index.html?$args;
    } 
#    location /dashboard/ {
#         proxy_pass http://dashboard:8000/;
#     }
    location /interface/ {
        limit_req zone=mylimit;

        proxy_pass http://interface:8888/;
        # Redirect the client to the desired URL
        # return 302 https://new-example.com$request_uri;

    }
    # added error page
    error_page 404 = @notfound;
    # 301 permanent redirection
    location @notfound {
        root   /usr/share/nginx/html;
        index  index.html;

        try_files $uri $uri/ /index.html?$args;
    }
    # error_page  404              /index.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
# server {
#     listen 80;
#     server_name  spoilerinterface.com www.spoilerinterface.com;
#     location /interface/ {
#         limit_req zone=mylimit;
#         # Preserve client information in variables
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header User-Agent $http_user_agent;
#         proxy_set_header Referer $http_referer;
        
#         proxy_pass http://interface:8888/;
#     }

#     location / {
#         return 301 https://$server_name$request_uri;
#     }
# }
